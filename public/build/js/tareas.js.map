{"version":3,"sources":["tareas.js"],"names":["async","url","obtenerProyectoId","respuesta","fetch","resultado","json","tareas","mostrarTareas","error","console","log","obtenerTareas","filtradas","document","querySelector","addEventListener","mostrarFormulario","filtrarTareas","e","filtro","target","value","filter","tarea","estado","length","listadoTareas","firstChild","removeChild","limpiarTareas","totalPendientes","pendientesRadio","disabled","totalCompletas","completadasRadio","arrayTareas","estadosObject","0","1","textoNoTareas","createElement","textContent","classList","add","appendChild","forEach","contenedorTarea","dataset","tareaId","id","nombreTarea","nombre","ondblclick","editar","opcionesDiv","btnEstadoTarea","toLowerCase","estadoTarea","tareaToModify","nuevoEstado","actualizarTarea","cambiarEstadoTarea","btnEliminarTarea","idTarea","tareaToDelete","Swal","fire","title","showDenyButton","showCancelButton","confirmButtonText","denyButtonText","then","result","isConfirmed","datos","FormData","append","method","body","mensaje","tareaMemoria","eliminarTarea","modal","innerHTML","setTimeout","preventDefault","contains","remove","nombreTareaInput","trim","mostrarAlertaUI","datosToSend","urlAgregarTarea","respuestaDeLaConexion","resultApiDataReturn","tipo","tareaNuevaObj","proyectoId","agregarTarea","referencia","alertaPrevia","alerta","parentElement","insertBefore","nextElementSibling","tareaModified","map","proyectoParams","URLSearchParams","window","location","search","Object","fromEntries","entries","querySelectorAll","radio"],"mappings":"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","file":"tareas.js","sourcesContent":["// IIFE: Immediately Invoked Function Expression \r\n// allow you to define variables and function inside a function which cannot be access outside of that function.\r\n(function() {\r\n\r\n    obtenerTareas();\r\n\r\n    let tareas = [];\r\n    let filtradas = [];\r\n\r\n    // Boton para mostrar la ventan emergente de Agregar Tarea\r\n    const nuevaTareaBtn = document.querySelector('#agregar-tarea');\r\n    nuevaTareaBtn.addEventListener('click', function() {\r\n        mostrarFormulario();\r\n    });\r\n\r\n    const filtros = document.querySelectorAll('#filtros input[type=\"radio\"');\r\n    filtros.forEach(radio => {\r\n        radio.addEventListener('input', filtrarTareas);\r\n    } )\r\n\r\n    // <<===== Funciones =====>>\r\n\r\n    function filtrarTareas(e) {\r\n        const filtro = e.target.value;\r\n\r\n        if(filtro !== '') {\r\n            filtradas = tareas.filter(tarea => tarea.estado === filtro);\r\n        } else {\r\n            filtradas = [];\r\n        }\r\n\r\n        mostrarTareas();\r\n    }\r\n\r\n    async function obtenerTareas() {\r\n        try {\r\n            const proyectoId = obtenerProyectoId();\r\n            const url = `/api/tareas?id=${proyectoId}`;\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n            // const {tareas} = resultado;\r\n            tareas = resultado.tareas;\r\n\r\n            mostrarTareas();\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    function mostrarTareas() {\r\n        limpiarTareas();\r\n\r\n        totalPendientes();\r\n        totalCompletas();\r\n\r\n        // si hay tareas filtradas entonces filtradas o si no el arreglo original de tareas\r\n        const arrayTareas = filtradas.length ? filtradas : tareas;\r\n\r\n        const listadoTareas = document.querySelector('#listado-tareas');\r\n        const estadosObject = {0 : 'Pendiente', 1 : 'Completa'};\r\n\r\n        if(arrayTareas.length === 0) {\r\n            const textoNoTareas = document.createElement('LI');\r\n            textoNoTareas.textContent = 'No Hay Tareas';\r\n            textoNoTareas.classList.add('no-tareas');\r\n\r\n            listadoTareas.appendChild(textoNoTareas);\r\n            console.log('No hay tareas');\r\n\r\n            return;\r\n        }\r\n\r\n        arrayTareas.forEach(tarea => {\r\n            const contenedorTarea = document.createElement('LI');\r\n            contenedorTarea.dataset.tareaId = tarea.id;\r\n            contenedorTarea.classList.add('tarea');\r\n            \r\n            const nombreTarea = document.createElement('P');\r\n            nombreTarea.textContent = tarea.nombre;\r\n            nombreTarea.ondblclick = function() {\r\n                mostrarFormulario(editar = true, {...tarea});\r\n            }\r\n            \r\n            const opcionesDiv = document.createElement('DIV');\r\n            opcionesDiv.classList.add('opciones');\r\n\r\n            // Botones\r\n            const btnEstadoTarea = document.createElement('BUTTON');\r\n            btnEstadoTarea.classList.add('estado-Tarea');\r\n            btnEstadoTarea.classList.add(`${estadosObject[tarea.estado].toLowerCase()}`);\r\n            btnEstadoTarea.textContent = estadosObject[tarea.estado];\r\n            btnEstadoTarea.dataset.estadoTarea = tarea.estado;\r\n\r\n            btnEstadoTarea.ondblclick = function() { \r\n                // Hacemos una copia de tarea porque no es buena practica trabajar en el objeto original\r\n                // Y JS es tan kk que se actualiza SOLO todo el objeto de tareas\r\n                cambiarEstadoTarea({...tarea});\r\n            };\r\n\r\n            const btnEliminarTarea = document.createElement('BUTTON');\r\n            btnEliminarTarea.classList.add('eliminar-tarea');\r\n            btnEliminarTarea.dataset.idTarea = tarea.id;\r\n            btnEliminarTarea.textContent = 'Eliminar';\r\n\r\n            btnEliminarTarea.ondblclick = function() {\r\n                confirmarEliminarTarea({...tarea});\r\n            }\r\n\r\n            opcionesDiv.appendChild(btnEstadoTarea);\r\n            opcionesDiv.appendChild(btnEliminarTarea);\r\n\r\n            contenedorTarea.appendChild(nombreTarea);\r\n            contenedorTarea.appendChild(opcionesDiv);\r\n\r\n            listadoTareas.appendChild(contenedorTarea);\r\n        });\r\n    }\r\n\r\n    function totalPendientes() {\r\n        const totalPendientes = tareas.filter(tarea => tarea.estado === '0');\r\n        const pendientesRadio = document.querySelector('#pendientes');\r\n\r\n        console.log(totalPendientes);\r\n\r\n        if(totalPendientes.length === 0) {\r\n            pendientesRadio.disabled = true;\r\n            console.log('hola');\r\n        } else {\r\n            pendientesRadio.disabled = false;\r\n        }\r\n    }\r\n\r\n    function totalCompletas() {\r\n        const totalCompletas = tareas.filter(tarea => tarea.estado === '1');\r\n        const completadasRadio = document.querySelector('#completadas');\r\n\r\n        if(totalCompletas.length === 0) {\r\n            completadasRadio.disabled = true;\r\n        } else {\r\n            completadasRadio.disabled = false;\r\n        }\r\n    }\r\n\r\n    function mostrarFormulario(editar = false, tarea = {}) {\r\n        const modal = document.createElement('DIV');\r\n        modal.classList.add('modal');\r\n        modal.innerHTML = `\r\n        <form action=\"\" class=\"formulario nueva-tarea\">\r\n            <legend>${editar ? 'Editar Tarea': 'Añade una nueva tarea'}</legend>\r\n            <div class=\"campo\">\r\n                <label for=\"\">Tarea</label>\r\n                <input type=\"text\" name=\"tarea\" id=\"tarea\"\r\n                placeholder=\"${tarea.nombre ? 'Edita la Tarea' : 'Añadir Tarea al Proyecto Actual'}\" \r\n                value = \"${tarea.nombre ? tarea.nombre : ''}\">\r\n            </div>\r\n            <div class=\"opciones\">\r\n                <button type=\"button\" class=\"cerrar-modal\">Cancelar</button>\r\n                \r\n                <input type=\"submit\" class=\"submit-nueva-tarea\" \r\n                value=\"${tarea.nombre ? 'Guardar Cambios' : 'Añadir Tarea'}\">\r\n            </div>\r\n        </form>\r\n        `;\r\n\r\n        // Por medio de delegation (Prioridades de JS al debuguear el codigo)\r\n        setTimeout(() => {\r\n            const formulario = document.querySelector('.formulario');\r\n            formulario.classList.add('animar');\r\n        }, 0);\r\n\r\n        modal.addEventListener('click', function(e) {\r\n            // console.log(e.target);\r\n            e.preventDefault();\r\n\r\n            if(e.target.classList.contains('cerrar-modal') ||\r\n            e.target.classList.contains('modal')) {\r\n                const formulario = document.querySelector('.formulario');\r\n                formulario.classList.add('cerrar');\r\n\r\n                setTimeout(() => {\r\n                    modal.remove(); //Elimina la ventana modal \r\n                }, 500);\r\n            }\r\n\r\n            if(e.target.classList.contains('submit-nueva-tarea')) {\r\n                \r\n                // .trim() Elimina los spacios al principio y final del input del usuario\r\n                const nombreTareaInput = document.querySelector('#tarea').value.trim();\r\n\r\n                if(nombreTareaInput === '') {\r\n                    mostrarAlertaUI('El nombre de la tarea es obligatorio', 'error', document.querySelector('.formulario legend'));\r\n                    return;\r\n                } \r\n\r\n                if(editar) {\r\n                    tarea.nombre = nombreTareaInput;\r\n                    actualizarTarea(tarea);\r\n                } else {\r\n                    agregarTarea(nombreTareaInput);\r\n                }\r\n            }\r\n        })\r\n\r\n        document.querySelector('.dashboard').appendChild(modal);\r\n    }\r\n\r\n    /**\r\n     * @param {string} mensaje \r\n     * @param {string} tipo Error o Exito \r\n     * @param {string} referencia La alerta se insertará ANTES del elemento referenciado\r\n     */\r\n    function mostrarAlertaUI(mensaje, tipo, referencia){\r\n\r\n        const alertaPrevia = document.querySelector('.alerta');\r\n        if(alertaPrevia) {\r\n            alertaPrevia.remove();\r\n        }\r\n\r\n        const alerta = document.createElement('DIV');\r\n        alerta.classList.add('alerta', tipo);\r\n        alerta.textContent = mensaje;\r\n\r\n        // console.log(\"referencia \", referencia);\r\n        // console.log(\"parentElement\", referencia.parentElement);\r\n        // console.log('sibiling', referencia.nextElementSibling);\r\n        \r\n        referencia.parentElement.insertBefore(alerta, referencia.nextElementSibling);\r\n\r\n        setTimeout(() => {\r\n            alerta.remove();\r\n        }, 5000);\r\n    }\r\n\r\n    /**\r\n     * Consulta el servidor/API para añadir una nueva tarea\r\n     */\r\n    async function agregarTarea(tarea) {\r\n        const datosToSend = new FormData();\r\n        datosToSend.append('nombre', tarea);\r\n        datosToSend.append('proyectoId', obtenerProyectoId());\r\n\r\n        try {\r\n            \r\n            // 1. Nos conectamos a la api\r\n            // 1. Request: A la vez que nos conectamos estamos enviando datos por medio de $_POST\r\n            const urlAgregarTarea = 'http://localhost:3000/api/tarea';\r\n            const respuestaDeLaConexion = await fetch(urlAgregarTarea, {\r\n                method: 'POST',\r\n                body: datosToSend\r\n            });\r\n\r\n            // 2. Response: Datos retornados de la api (La api siempre debe retornar JSON)\r\n            const resultApiDataReturn = await respuestaDeLaConexion.json();\r\n            \r\n            if(resultApiDataReturn.tipo === 'exito') {\r\n                \r\n                const modal = document.querySelector('.modal');\r\n\r\n                mostrarAlertaUI(resultApiDataReturn.mensaje,\r\n                    resultApiDataReturn.tipo,\r\n                    document.querySelector('.formulario legend'));\r\n\r\n                setTimeout(() => {\r\n                    modal.remove();\r\n                    // window.location.reload();\r\n                }, 3000);\r\n\r\n                const tareaNuevaObj = {\r\n                    estado: \"0\",\r\n                    id: resultApiDataReturn.id,\r\n                    nombre: tarea, \r\n                    proyectoId: resultApiDataReturn.proyectoId \r\n                }\r\n\r\n                tareas = [...tareas, tareaNuevaObj];\r\n                mostrarTareas();\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    function cambiarEstadoTarea(tareaToModify) {\r\n        \r\n        const nuevoEstado = tareaToModify.estado === \"1\" ? \"0\" : \"1\"; // if 1 => 0 else 1\r\n        tareaToModify.estado = nuevoEstado;\r\n        actualizarTarea(tareaToModify);\r\n\r\n    }\r\n\r\n    async function actualizarTarea(tareaModified) {\r\n        const {estado, id, nombre, proyectoId} = tareaModified;\r\n\r\n        const datos = new FormData();\r\n        datos.append('estado', estado);\r\n        datos.append('id', id);\r\n        datos.append('nombre', nombre);\r\n        datos.append('proyectoId', proyectoId);\r\n        datos.append('url', obtenerProyectoId());\r\n\r\n        // debugueando datos\r\n        /*for( let valor of datos.values()) {\r\n            console.log(valor);\r\n        }*/\r\n\r\n        try {\r\n            const url = 'http://localhost:3000/api/tarea/actualizar';\r\n            const respuesta = await fetch(url, { method: 'POST', body: datos });\r\n            const resultado = await respuesta.json();\r\n\r\n            if(resultado.respuesta.tipo === 'exito') {\r\n                // mostrarAlertaUI(\r\n                //     resultado.respuesta.mensaje, \r\n                //     resultado.respuesta.tipo, \r\n                //     document.querySelector('.contenedor-nueva-tarea'));\r\n\r\n                Swal.fire(\r\n                    '', \r\n                    resultado.respuesta.mensaje,\r\n                    'success'\r\n                );\r\n\r\n                const modal = document.querySelector('.modal');\r\n                if(modal) {\r\n                    modal.remove();\r\n                }\r\n\r\n                // Modificamos el estado de la tarea mediante un nuevo arreglo en memoria\r\n                tareas = tareas.map(tareaMemoria => {\r\n                    if(tareaMemoria.id === id) {\r\n                        tareaMemoria.estado = estado;\r\n                        tareaMemoria.nombre = nombre;\r\n                    }\r\n\r\n                    return tareaMemoria;\r\n                });\r\n\r\n                mostrarTareas();\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    function confirmarEliminarTarea(tareaToDelete) {\r\n        // const respuesta = confirm('Eliminar Tarea?');\r\n\r\n        // https://sweetalert2.github.io/v10.html\r\n        // A dialog with three buttons\r\n        Swal.fire({\r\n            title: '¿Eliminar Tarea?',\r\n            showDenyButton: true,\r\n            showCancelButton: false,\r\n            confirmButtonText: 'Si',\r\n            denyButtonText: `No`,\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                eliminarTarea(tareaToDelete);\r\n                // Swal.fire('Tarea Eliminada!', '', 'success');\r\n            } \r\n          })\r\n    }\r\n\r\n    async function eliminarTarea(tareaToDelete) {\r\n\r\n        const {estado, id, nombre} = tareaToDelete;\r\n\r\n        const datos = new FormData();\r\n        datos.append('estado', estado);\r\n        datos.append('id', id);\r\n        datos.append('nombre', nombre);\r\n        datos.append('url', obtenerProyectoId());\r\n\r\n        try {\r\n            const url = 'http://localhost:3000/api/tarea/eliminar';\r\n            const respuesta = await fetch(url, {method: 'POST', body: datos});\r\n            const resultado = await respuesta.json();\r\n\r\n            // mostrarAlertaUI(\r\n            //     resultado.mensaje,\r\n            //     resultado.tipo,\r\n            //     document.querySelector('.contenedor-nueva-tarea')\r\n            // );\r\n\r\n            if(resultado.resultado) {\r\n                Swal.fire('Eliminado!', resultado.mensaje, 'success');\r\n\r\n                //crear un nuevo arreglo con uno excepto todos o todos excepto uno\r\n                tareas = tareas.filter(tareaMemoria => tareaMemoria.id !== tareaToDelete.id);\r\n\r\n                mostrarTareas();\r\n            } else {\r\n                Swal.fire('Error :(', resultado.mensaje, 'error');\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    function obtenerProyectoId() {\r\n        const proyectoParams = new URLSearchParams(window.location.search);\r\n        const proyecto = Object.fromEntries(proyectoParams.entries());\r\n        return proyecto.id;\r\n    }\r\n\r\n    function limpiarTareas() {\r\n        \r\n        if(tareas.length > 0){\r\n            const listadoTareas = document.querySelector('#listado-tareas');\r\n            // listadoTareas.innerHTML = ''; No lo usamos porque es muy lento/mas procesamiento\r\n    \r\n            while(listadoTareas.firstChild) {\r\n                listadoTareas.removeChild(listadoTareas.firstChild);\r\n            }\r\n        }\r\n        \r\n    }\r\n})();\r\n"]}