{"version":3,"sources":["tareas.js"],"names":["mostrarAlertaUI","mensaje","tipo","referencia","alertaPrevia","document","querySelector","remove","alerta","createElement","classList","add","textContent","console","log","parentElement","nextElementSibling","insertBefore","setTimeout","addEventListener","modal","innerHTML","e","preventDefault","target","contains","tarea","value","trim","async","datosToSend","FormData","append","proyectoParams","URLSearchParams","window","location","search","Object","fromEntries","entries","id","obtenerProyectoId","urlAgregarTarea","respuestaDeLaConexion","fetch","method","body","resultApiDataReturn","json","error","agregarTarea","submitFormularioNuevaTarea","appendChild"],"mappings":"CAEA,WAoEI,SAASA,EAAgBC,EAASC,EAAMC,GAEpC,MAAMC,EAAeC,SAASC,cAAc,WACzCF,GACCA,EAAaG,SAGjB,MAAMC,EAASH,SAASI,cAAc,OACtCD,EAAOE,UAAUC,IAAI,SAAUT,GAC/BM,EAAOI,YAAcX,EAErBY,QAAQC,IAAI,cAAeX,GAC3BU,QAAQC,IAAI,gBAAiBX,EAAWY,eACxCF,QAAQC,IAAI,WAAYX,EAAWa,oBAEnCb,EAAWY,cAAcE,aAAaT,EAAQL,EAAWa,oBAEzDE,WAAW,KACPV,EAAOD,UACR,KApFeF,SAASC,cAAc,kBAC/Ba,iBAAiB,SAE/B,WACI,MAAMC,EAAQf,SAASI,cAAc,OACrCW,EAAMV,UAAUC,IAAI,SACpBS,EAAMC,UAAY,qjBAelBH,WAAW,KACYb,SAASC,cAAc,eAC/BI,UAAUC,IAAI,WAC1B,GAEHS,EAAMD,iBAAiB,SAAS,SAASG,GAIrC,GAFAA,EAAEC,iBAECD,EAAEE,OAAOd,UAAUe,SAAS,iBAC/BH,EAAEE,OAAOd,UAAUe,SAAS,SAAU,CACfpB,SAASC,cAAc,eAC/BI,UAAUC,IAAI,UAEzBO,WAAW,KACPE,EAAMb,UACP,KAGJe,EAAEE,OAAOd,UAAUe,SAAS,uBAQvC,WAEI,MAAMC,EAAQrB,SAASC,cAAc,UAAUqB,MAAMC,OAErD,GAAa,KAAVF,EAEC,YADA1B,EAAgB,uCAAwC,QAASK,SAASC,cAAc,wBAqChGuB,eAA4BH,GACxB,MAAMI,EAAc,IAAIC,SACxBD,EAAYE,OAAO,SAAUN,GAC7BI,EAAYE,OAAO,aAiCvB,WACI,MAAMC,EAAiB,IAAIC,gBAAgBC,OAAOC,SAASC,QAE3D,OADiBC,OAAOC,YAAYN,EAAeO,WACnCC,GApCiBC,IAEjC,IAII,MAAMC,EAAkB,kCAClBC,QAA8BC,MAAMF,EAAiB,CACvDG,OAAQ,OACRC,KAAMjB,IAIJkB,QAA4BJ,EAAsBK,OAExD,GAAgC,UAA7BD,EAAoB9C,KAAkB,CAErC,MAAMkB,EAAQf,SAASC,cAAc,UAErCN,EAAgBgD,EAAoB/C,QAChC+C,EAAoB9C,KACpBG,SAASC,cAAc,uBAE3BY,WAAW,KACPE,EAAMb,UACP,MAGT,MAAO2C,GACLrC,QAAQC,IAAIoC,IAjEhBC,CAAazB,GAhBL0B,MAIR/C,SAASC,cAAc,cAAc+C,YAAYjC,MAhDzD","file":"tareas.js","sourcesContent":["// IIFE: Immediately Invoked Function Expression \r\n// allow you to define variables and function inside a function which cannot be access outside of that function.\r\n(function() {\r\n\r\n    // Boton para mostrar la ventan emergente de Agregar Tarea\r\n    const nuevaTareaBtn = document.querySelector('#agregar-tarea');\r\n    nuevaTareaBtn.addEventListener('click', mostrarFormulario);\r\n\r\n    function mostrarFormulario() {\r\n        const modal = document.createElement('DIV');\r\n        modal.classList.add('modal');\r\n        modal.innerHTML = `\r\n        <form action=\"\" class=\"formulario nueva-tarea\">\r\n            <legend>Añade una nueva tarea</legend>\r\n            <div class=\"campo\">\r\n                <label for=\"\">Tarea</label>\r\n                <input type=\"text\" name=\"tarea\" placeholder=\"Añadir Tarea al Proyecto Actual\" id=\"tarea\">\r\n            </div>\r\n            <div class=\"opciones\">\r\n                <input type=\"submit\" class=\"submit-nueva-tarea\" value=\"Añadir Tarea\">\r\n                <button type=\"button\" class=\"cerrar-modal\">Cancelar</button>\r\n            </div>\r\n        </form>\r\n        `;\r\n\r\n        // Por medio de delegation (Prioridades de JS al debuguear el codigo)\r\n        setTimeout(() => {\r\n            const formulario = document.querySelector('.formulario');\r\n            formulario.classList.add('animar');\r\n        }, 0);\r\n\r\n        modal.addEventListener('click', function(e) {\r\n            // console.log(e.target);\r\n            e.preventDefault();\r\n\r\n            if(e.target.classList.contains('cerrar-modal') ||\r\n            e.target.classList.contains('modal')) {\r\n                const formulario = document.querySelector('.formulario');\r\n                formulario.classList.add('cerrar');\r\n\r\n                setTimeout(() => {\r\n                    modal.remove(); //Elimina la ventana modal \r\n                }, 500);\r\n            }\r\n\r\n            if(e.target.classList.contains('submit-nueva-tarea')) {\r\n                submitFormularioNuevaTarea();\r\n            }\r\n        })\r\n\r\n        document.querySelector('.dashboard').appendChild(modal);\r\n    }\r\n\r\n    function submitFormularioNuevaTarea() {\r\n        // .trim() Elimina los spacios al principio y final del input del usuario\r\n        const tarea = document.querySelector('#tarea').value.trim();\r\n\r\n        if(tarea === '') {\r\n            mostrarAlertaUI('El nombre de la tarea es obligatorio', 'error', document.querySelector('.formulario legend'));\r\n            return;\r\n        } \r\n\r\n        agregarTarea(tarea);\r\n    }\r\n\r\n    /**\r\n     * @param {string} mensaje \r\n     * @param {string} tipo Error o Exito \r\n     * @param {string} referencia La alerta se insertará ANTES del elemento referenciado\r\n     */\r\n    function mostrarAlertaUI(mensaje, tipo, referencia){\r\n\r\n        const alertaPrevia = document.querySelector('.alerta');\r\n        if(alertaPrevia) {\r\n            alertaPrevia.remove();\r\n        }\r\n\r\n        const alerta = document.createElement('DIV');\r\n        alerta.classList.add('alerta', tipo);\r\n        alerta.textContent = mensaje;\r\n\r\n        console.log(\"referencia \", referencia);\r\n        console.log(\"parentElement\", referencia.parentElement);\r\n        console.log('sibiling', referencia.nextElementSibling);\r\n        \r\n        referencia.parentElement.insertBefore(alerta, referencia.nextElementSibling);\r\n\r\n        setTimeout(() => {\r\n            alerta.remove();\r\n        }, 5000);\r\n    }\r\n\r\n    /**\r\n     * Consulta el servidor/API para añadir una nueva tarea\r\n     */\r\n    async function agregarTarea(tarea) {\r\n        const datosToSend = new FormData();\r\n        datosToSend.append('nombre', tarea);\r\n        datosToSend.append('proyectoId', obtenerProyectoId());\r\n\r\n        try {\r\n            \r\n            // 1. Nos conectamos a la api\r\n            // 1. Request: A la vez que nos conectamos estamos enviando datos por medio de $_POST\r\n            const urlAgregarTarea = 'http://localhost:3000/api/tarea';\r\n            const respuestaDeLaConexion = await fetch(urlAgregarTarea, {\r\n                method: 'POST',\r\n                body: datosToSend\r\n            });\r\n\r\n            // 2. Response: Datos retornados de la api (La api siempre debe retornar JSON)\r\n            const resultApiDataReturn = await respuestaDeLaConexion.json();\r\n            \r\n            if(resultApiDataReturn.tipo === 'exito') {\r\n                \r\n                const modal = document.querySelector('.modal');\r\n\r\n                mostrarAlertaUI(resultApiDataReturn.mensaje,\r\n                    resultApiDataReturn.tipo,\r\n                    document.querySelector('.formulario legend'));\r\n\r\n                setTimeout(() => {\r\n                    modal.remove();\r\n                }, 3000);\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    function obtenerProyectoId() {\r\n        const proyectoParams = new URLSearchParams(window.location.search);\r\n        const proyecto = Object.fromEntries(proyectoParams.entries());\r\n        return proyecto.id;\r\n    }\r\n})();\r\n"]}